Yash: yet another shell
=======================


Yash is a implementation of command line shell, personally developed
by Magicant. It is under development aiming at complete conformance to
POSIX.1 (IEEE Std 1003.1, 2004 Edition).


Yash is free software, distributed under the terms of GPL.
See the file COPYING for more info.

See the file INSTALL to find how to build and install Yash.

Currently there is no manpage for yash. Sorry.


===== Notes =====

 * In C, a null character represents the end of string. If input from
   a file or a string in itself contains a null character, the
   following characters will be neglected.
 * We assume that an overflow in signed integer arithmetic or type
   conversion silently yields an implementation-defined integer
   rather than resulting in an error.
 * The GCC extension keyword `__attribute__' is used in the source
   codes. When not compiled with GCC, this keyword is removed by
   preprocessor, so generally there is no harm. But if your compiler
   uses this keyword for any other purpose, compilation may fail.
   Additionally, some other identifiers starting with '_' may cause
   compilation errors on some rare environments.
 * Some signals are assumed to have the specific numbers:
     SIGHUP=1 SIGINT=2 SIGQUIT=3 SIGABRT=6
     SIGKILL=9 SIGALRM=14 SIGTERM=15
 * File permission flags are assumed to have the specific values:
     0400=user read    0200=user write   0100=user execute
     0040=group read   0020=group write  0010=group execute
     0004=other read   0002=other write  0001=other execute
 * When -e (-o errexit) option is set, failure of the last command of
   an and/or list makes the shell exit. This behavior is not strictly
   POSIX-compliant, but most existing shells behave this way.
 * According to POSIX, the variable 'PS1' is subject to parameter
   expansion. Yash also performs command substitution and arithmetic
   expansion on 'PS1'.
 * Bracket expressions in filename expansion are not fully supported.
 * Aliases containing newlines are not supported.
 * Some builtin is executed in a subshell, rather than the current
   shell, if it is preceded by an assignment to $PATH affecting the
   command path search. This inappropriate behavior is due to the
   timings when command path search is actually performed and when
   the shell forks.


======================
Magicant <magicant.starmen@nifty.com>
