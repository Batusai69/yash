# Makefile.in for yash: yet another shell
# (C) 2007-2009 magicant
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

.POSIX:
.SUFFIXES: .c .h .o .a

CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
LDLIBS = @LDLIBS@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
DIRS = @DIRS@
SOURCES = alias.c alias.h arith.c arith.h builtin.c builtin.h common.h exec.c exec.h expand.c expand.h hashtable.c hashtable.h history.c history.h job.c job.h input.c input.h option.c option.h mail.c mail.h mksignum.c parser.c parser.h path.c path.h plist.c plist.h redir.c redir.h sig.c sig.h siglist.h strbuf.c strbuf.h util.c util.h variable.c variable.h wfnmatch.c wfnmatch.h yash.h yash.c
OBJS = @OBJS@
TARGET = @TARGET@
MKSIGNUMOBJS = mksignum.o

BYPRODUCTS = mksignum signum.h

all: $(TARGET) depends

# Though these rules are exactly the same as the default rules defined by POSIX,
# we re-define them here because at least GNU Make is not fully compliant.
.c:
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $<
.c.o:
	$(CC) $(CFLAGS) -c $<

$(TARGET): $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)
builtins/@BUILTINS_ARCHIVE@: _PHONY
	@cd builtins && $(MAKE)
mksignum: $(MKSIGNUMOBJS)
	$(CC) $(LDFLAGS) -o $@ $(MKSIGNUMOBJS) $(LDLIBS)
signum.h: mksignum
	./mksignum > $@
sig.o: signum.h

depends: $(TARGET)
	@./$(TARGET) makedepend $(DIRS); \
		if [ $$? -eq 1 ]; then $(MAKE) $(TARGET); fi

test check: $(TARGET)
	@cd tests && $(MAKE) test-all

BINDIR = @BINDIR@
install: $(TARGET) $(BINDIR)
	$(INSTALL_PROGRAM) -c $(TARGET) '$(BINDIR)/$(TARGET)'
install-strip: $(TARGET) $(BINDIR)
	$(INSTALL_PROGRAM) -c -s $(TARGET) '$(BINDIR)/$(TARGET)'
installdirs: $(BINDIR)
$(BINDIR):
	$(INSTALL_PROGRAM) -d $@
uninstall:
	rm -f '$(BINDIR)/$(TARGET)'

PACKAGE = @PACKAGE@
VERSION = @VERSION@
DISTDIR = @DISTDIR@
DISTS = $(DISTDIR).tar.Z $(DISTDIR).tar.gz $(DISTDIR).tar.bz2 $(DISTDIR).shar.gz $(DISTDIR).zip
DISTCONTENTS = $(SOURCES) README README.ja COPYING INSTALL INSTALL.ja NEWS NEWS.ja configure Makefile.in install-sh
distcontents: $(DISTCONTENTS)
$(DISTDIR):
	mkdir -p $@
	for i in . $$(grep / .distfiles | sed -e 's;/[^/]*$$;;' | sort -u); do \
		(cd $$i && [ -e Makefile ] && $(MAKE) distcontents); \
		mkdir -p $@/$$i; \
	done
	while read -r i; do \
		cp -fRL $$i $@/$${i%/*}; \
	done < .distfiles
# Only pax and compress comform to POSIX.
dist-tarZ: $(DISTDIR).tar.Z
	-rm -rf $(DISTDIR)
dist dist-gzip: $(DISTDIR).tar.gz
	-rm -rf $(DISTDIR)
dist-bzip2: $(DISTDIR).tar.bz2
	-rm -rf $(DISTDIR)
dist-shar: $(DISTDIR).shar.gz
	-rm -rf $(DISTDIR)
dist-zip: $(DISTDIR).zip
	-rm -rf $(DISTDIR)
dist-all: $(DISTS)
	-rm -rf $(DISTDIR)
$(DISTDIR).tar.Z: $(DISTDIR)
	pax -w -x ustar $(DISTDIR) | compress -c > $@
$(DISTDIR).tar.gz: $(DISTDIR)
	tar -c $(DISTDIR) | gzip -c > $@
$(DISTDIR).tar.bz2: $(DISTDIR)
	tar -c $(DISTDIR) | bzip2 -9 -c > $@
$(DISTDIR).shar.gz: $(DISTDIR)
	shar -q -T $(DISTDIR) | gzip -c > $@
$(DISTDIR).zip: $(DISTDIR)
	zip -rq $@ $(DISTDIR)

# ctags conforms to POSIX, but etags and cscope do not.
CTAGSARGS = @CTAGSARGS@
ETAGSARGS = @ETAGSARGS@
tags: $(SOURCES)
	ctags $(CTAGSARGS)
TAGS: $(SOURCES)
	etags $(ETAGSARGS)
cscope: cscope.out
cscope.out: $(SOURCES)
	cscope -b

mostlyclean: _mostlyclean
	-@cd builtins && $(MAKE) mostlyclean
_mostlyclean:
	-rm -rf $(OBJS) $(MKSIGNUMOBJS) $(BYPRODUCTS) $(DISTDIR)
	-@cd tests && $(MAKE) clean
clean: _clean
	-@cd builtins && $(MAKE) clean
_clean: _mostlyclean
	-rm -rf $(TARGET) $(DISTS)
distclean: _distclean
	-@cd builtins && $(MAKE) distclean
_distclean: _clean
	-rm -rf Makefile config.cache config.log config.h version.h tags TAGS cscope.out
maintainer-clean:
	@echo 'This command is intended for maintainers to use;'
	@echo 'it deletes files that may need special tools to rebuild.'
	@$(MAKE) distclean

reconfigure:
	@{ line=$$(sed -n -e '/# Invocation command line was:/ { n;s/% //;p;q \
	}' config.log) && { echo "$$line"; eval "$$line"; }; } || \
	echo Cannot read \"config.log\". Try usual \"./configure\" >&2

.PHONY: all depends test check install install-strip installdirs uninstall dist distcontents dist-tarZ dist-gzip dist-bzip2 dist-shar dist-zip dist-all cscope mostlyclean _mostlyclean clean _clean distclean _distclean maintainer-clean reconfigure
_PHONY:
