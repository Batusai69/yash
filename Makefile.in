# Makefile.in for yash: yet another shell
# (C) 2007-2010 magicant
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

.POSIX:
.SUFFIXES: .c .h .d .o .a

@MAKE_SHELL@
CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
LDLIBS = @LDLIBS@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
DIRS = @DIRS@
SOURCES = alias.c arith.c builtin.c exec.c expand.c hashtable.c history.c input.c job.c mail.c makesignum.c option.c parser.c path.c plist.c redir.c sig.c strbuf.c util.c variable.c xfnmatch.c yash.c
HEADERS = alias.h arith.h builtin.h common.h exec.h expand.h hashtable.h history.h input.h job.h mail.h option.h parser.h path.h plist.h redir.h sig.h siglist.h strbuf.h util.h variable.h xfnmatch.h yash.h
MAIN_OBJS = arith.o builtin.o exec.o expand.o hashtable.o input.o job.o mail.o option.o parser.o path.o plist.o redir.o sig.o strbuf.o util.o variable.o xfnmatch.o yash.o
ALIAS_OBJS = alias.o
HISTORY_OBJS = history.o
BUILTINS_ARCHIVE = builtins/builtins.a
LINEEDIT_ARCHIVE = lineedit/lineedit.a
OBJS = @OBJS@
TARGET = yash
VERSION = @VERSION@
COPYRIGHT = @COPYRIGHT@
BYPRODUCTS = makesignum.o makesignum signum.h configm.h *.dSYM

DESTDIR =
PREFIX = @PREFIX@
EPREFIX = @EPREFIX@
BINDIR = @BINDIR@
DATAROOTDIR = @DATAROOTDIR@
DATADIR = @DATADIR@
YASHDATADIR = $(DATADIR)/yash

all: $(TARGET)

.c:
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $< $(LDLIBS)
.c.o:
	@rm -f $@
	$(CC) $(CFLAGS) -c $<

$(TARGET): $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)
$(BUILTINS_ARCHIVE): _PHONY
	@+(cd builtins && $(MAKE))
$(LINEEDIT_ARCHIVE): _PHONY
	@+(cd lineedit && $(MAKE))
sig.o: signum.h
signum.h: makesignum
	./makesignum > $@
variable.o yash.o: configm.h
configm.h: Makefile
	-@echo creating $@...
	@{ printf '/* $@: created by Makefile */\n'; \
		printf '#ifndef YASH_CONFIGM_H\n'; \
		printf '#define YASH_CONFIGM_H\n'; \
		printf '#define PACKAGE_VERSION "$(VERSION)"\n'; \
		printf '#define PACKAGE_COPYRIGHT "$(COPYRIGHT)"\n'; \
		printf '#define YASH_DATADIR "$(YASHDATADIR)"\n'; \
		printf '#endif\n'; \
		} >$@

test tests check: _PHONY
	@+(cd tests && $(MAKE))

INSTALLDIRS = $(DESTDIR)$(BINDIR) $(DESTDIR)$(YASHDATADIR) $(DESTDIR)$(YASHDATADIR)/completion
install: install-binary install-data
install-strip: install-data
	@+$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install-binary
install-binary: $(TARGET) $(DESTDIR)$(BINDIR)
	$(INSTALL_PROGRAM) -c $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET)
install-data: $(DESTDIR)$(YASHDATADIR)/completion
	@for file in share/completion/*; do \
		echo $(INSTALL_PROGRAM) -c -m 644 $$file $(DESTDIR)$(YASHDATADIR)/completion || true; \
		$(INSTALL_PROGRAM) -c -m 644 $$file $(DESTDIR)$(YASHDATADIR)/completion; \
	done
installdirs: $(INSTALLDIRS)
$(INSTALLDIRS):
	$(INSTALL_PROGRAM) -d $@
uninstall: uninstall-binary uninstall-data
uninstall-binary:
	rm -f $(DESTDIR)$(BINDIR)/$(TARGET)
uninstall-data:
	@(cd share/completion && \
	for file in *; do \
		echo rm -f $(DESTDIR)$(YASHDATADIR)/completion/$$file || true; \
		rm -f $(DESTDIR)$(YASHDATADIR)/completion/$$file; \
	done)
	-rmdir $(DESTDIR)$(YASHDATADIR)/completion
	-rmdir $(DESTDIR)$(YASHDATADIR)

DISTDIR = yash-$(VERSION)
DISTS = $(DISTDIR).tar.Z $(DISTDIR).tar.gz $(DISTDIR).tar.bz2 $(DISTDIR).shar.gz $(DISTDIR).zip
DISTCONTENTS = $(SOURCES) $(SOURCES:.c=.d) $(HEADERS) README README.ja COPYING INSTALL INSTALL.ja NEWS NEWS.ja configure Makefile.in install-sh
# "distcontents" depends on "$(OBJS)" to ensure all *.d files up-to-date
distcontents: $(DISTCONTENTS) $(OBJS)
$(DISTDIR):
	rm -fr $@
	mkdir -m 755 $@
	@+base=$$PWD; umask 022; \
	for d in $(DIRS); do \
		(cd $$d && $(MAKE) DISTTARGETDIR=$$base/$@/$$d copy-distcontents) || \
		exit; \
	done
copy-distcontents: distcontents
	mkdir -p $(DISTTARGETDIR)
	cp $(DISTCONTENTS) $(DISTTARGETDIR)
# Only pax and compress comform to POSIX.
dist-tarZ: $(DISTDIR).tar.Z
	-rm -rf $(DISTDIR)
dist dist-gzip: $(DISTDIR).tar.gz
	-rm -rf $(DISTDIR)
dist-bzip2: $(DISTDIR).tar.bz2
	-rm -rf $(DISTDIR)
dist-shar: $(DISTDIR).shar.gz
	-rm -rf $(DISTDIR)
dist-zip: $(DISTDIR).zip
	-rm -rf $(DISTDIR)
dist-all: $(DISTS)
	-rm -rf $(DISTDIR)
$(DISTDIR).tar.Z: $(DISTDIR)
	pax -w -x ustar $(DISTDIR) | compress -c > $@
$(DISTDIR).tar.gz: $(DISTDIR)
	tar -c -f - $(DISTDIR) | gzip -c > $@
$(DISTDIR).tar.bz2: $(DISTDIR)
	tar -c -f - $(DISTDIR) | bzip2 -9 -c > $@
$(DISTDIR).shar.gz: $(DISTDIR)
	shar $(DISTDIR) | gzip -c > $@
$(DISTDIR).zip: $(DISTDIR)
	zip -rq $@ $(DISTDIR)

# ctags conforms to POSIX, but etags and cscope do not.
CTAGS = @CTAGS@
CTAGSARGS = @CTAGSARGS@
ETAGS = @ETAGS@
ETAGSARGS = @ETAGSARGS@
CSCOPE = @CSCOPE@
CSCOPEARGS = @CSCOPEARGS@
tags: $(SOURCES) $(HEADERS)
	$(CTAGS) $(CTAGSARGS)
TAGS: $(SOURCES) $(HEADERS)
	$(ETAGS) $(ETAGSARGS)
cscope: cscope.out
cscope.out: $(SOURCES) $(HEADERS)
	$(CSCOPE) $(CSCOPEARGS)

mostlyclean: _mostlyclean
	-@+(cd builtins && $(MAKE) mostlyclean)
	-@+(cd lineedit && $(MAKE) mostlyclean)
_mostlyclean:
	-rm -rf $(OBJS) $(BYPRODUCTS) $(DISTDIR)
	-@+(cd tests && $(MAKE) clean)
clean: _clean
	-@+(cd builtins && $(MAKE) clean)
	-@+(cd lineedit && $(MAKE) clean)
_clean: _mostlyclean
	-rm -rf $(TARGET) $(DISTS)
distclean: _distclean
	-@+(cd builtins && $(MAKE) distclean)
	-@+(cd lineedit && $(MAKE) distclean)
	-@+(cd tests    && $(MAKE) distclean)
_distclean: _clean
	-rm -rf Makefile config.log config.status config.h tags TAGS cscope.out
maintainer-clean:
	@echo 'This command is intended for maintainers to use;'
	@echo 'it deletes files that may need special tools to rebuild.'
	@+$(MAKE) _distclean
	-@+(cd builtins && $(MAKE) maintainer-clean)
	-@+(cd lineedit && $(MAKE) maintainer-clean)
	-@+(cd tests    && $(MAKE) maintainer-clean)
	-rm -rf $(SOURCES:.c=.d)

config.h: config.status
	$(SHELL) config.status
Makefile: Makefile.in config.status
	$(SHELL) config.status
config.status: configure
	$(SHELL) config.status --recheck

.PHONY: all test tests check install install-strip install-binary install-data installdirs uninstall uninstall-binary uninstall-data dist distcontents copy-distcontents dist-tarZ dist-gzip dist-bzip2 dist-shar dist-zip dist-all cscope mostlyclean _mostlyclean clean _clean distclean _distclean maintainer-clean 
_PHONY:

@MAKE_INCLUDE@ alias.d
@MAKE_INCLUDE@ arith.d
@MAKE_INCLUDE@ builtin.d
@MAKE_INCLUDE@ exec.d
@MAKE_INCLUDE@ expand.d
@MAKE_INCLUDE@ hashtable.d
@MAKE_INCLUDE@ history.d
@MAKE_INCLUDE@ input.d
@MAKE_INCLUDE@ job.d
@MAKE_INCLUDE@ mail.d
@MAKE_INCLUDE@ makesignum.d
@MAKE_INCLUDE@ option.d
@MAKE_INCLUDE@ parser.d
@MAKE_INCLUDE@ path.d
@MAKE_INCLUDE@ plist.d
@MAKE_INCLUDE@ redir.d
@MAKE_INCLUDE@ sig.d
@MAKE_INCLUDE@ strbuf.d
@MAKE_INCLUDE@ util.d
@MAKE_INCLUDE@ variable.d
@MAKE_INCLUDE@ xfnmatch.d
@MAKE_INCLUDE@ yash.d
