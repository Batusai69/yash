                LITERAL TILDE 3EXP BRACE GLOBBING
Brace expansion yes     no    no   n/a   n/a
Field splitting no      no    yes  no    n/a
Globbing        yes     no    yes  any   n/a
Quote rm        yes     no    yes  any   no
Empty field rm  n/a     n/a   n/a  n/a   n/a

processquotes   true      false     false
escapeall       false     false     true
esc             n/a       true      false
 $              expand    expand    expand
 `              cmdsub    cmdsub    cmdsub
 "              quote      "         "
 '              quote      '         '
\"              \" -> "   \"        \"
\'              \' -> '   \'        \'
\X              \X -> X   \X        \X
\$              \$ -> $   \$ -> $   \$
\`              \` -> `   \` -> `   \`
\\              \\ -> \   \\ -> \   \\

Callee tree:
***
  expand_param
    expand_four...
  expand_four
    expand_multiple ((Q_WORD))
      expand_line
        exec_for...
        exec_process...
        do_assignments...
      cparse_simple_command...
      ctryparse_assignment...
      cparse_for_command...
    expand_word ((quoting))
      expand_single ((quoting, escaping))
        parse_and_expand_string ((esc ? Q_INDQ : Q_LITERAL, ES_NONE))
          expand_prompt_variable ((esc=*FALSE*)) tested
          print_message (mail.c) ((esc=true)) untested
          execute_rcfile ((esc=*FALSE*)) untested
        expand_redir_filename ((Q_WORD, ES_NONE))
        open_heredocument ((Q_INDQ, ES_NONE))
        do_assignments ((Q_WORD, ES_NONE))
        exec_funcdef ((Q_WORD, ES_NONE))
        print_subst_as_error... ((Q_WORD, ES_NONE))
        expand_four... ((Q_WORD, ES_NONE))
        expand_single_with_glob ((Q_WORD, ES_QUOTED_HARD))
        expand_double_bracket_operand_escaped ((Q_WORD, ES_QUOTED))
        expand_double_bracket_operand_unescaped ((Q_WORD, ES_NONE))
        exec_case ((Q_WORD, ES_NONE))
        exec_case ((Q_WORD, ES_QUOTED))
        cparse_word ((Q_WORD, ES_QUOTED_HARD))
        expand_param... ((Q_WORD, ES_NONE))
        expand_param... ((Q_WORD, ES_QUOTED))
      expand_param... ((Q_WORD, ES_NONE))
    expand_param... ((Q_WORD))

Call tree:
expand_multiple
  expand_four
  brace expansion *
  field splitting *
  empty field removal
  quote removal
  globbing *

Call tree:
add_sq
escapefree
  escape
unescapefree
  unescape
quote_as_word
  wb_quote_as_word
unquote
  add_sq
quote_removal_free
  quote_removal

Callee tree:
add_sq
  expand_four...
  unquote
    read_heredoc_contents_without_expansion... (parser.c)
    print_pending_heredocs... (parser.c)
    tryhash_word_as_command... (variable.c)
escape
  escapefree
    expand_param...
    get_prompt... (input.c)
    cparse_paramexp_in_brace... (lineedit/compparse.c)
    cparse_cmdsubst_in_backquote... (lineedit/compparse.c)
  perform_search... (lineedit/editing.c)
  read_heredoc_contents_without_expansion... (parser.c)
  promptset_for_read... (variable.c)
unescape
  unescapefree
    expand_single_with_glob...
    expand_param...
    glob_all
      expand_multiple...
  test_triple_db... (builtins/test.c)
  le_get_context... (lineedit/compparse.c)
  wglob_parse_pattern_part... (path.c)
wb_quote_as_word
  quote_as_word
    print_alias...
    print_xtrace...
    print_binding_main...
    print_trap...
    print_variable...
    print_scalar...
    print_array...
    print_function...
  xtrace_variable...
  xtrace_array...
should_escape
  quote_removal
    quote_removal_free
      expand_multiple...
      expand_word

TODO:
* Reconsider the order of expansions performed
  * Globbing should be done before quote removal
  * Empty field removal should be done after quote removal
* Consider adding facade function around expand_four which initializes expand_four_T, calls expand_four, and appends {value,cc}buf to {value,cc}list
* Consider reusing the fields list in the fieldsplit function
