# completion settings for the df command (POSIX 2008; GNU coreutils 8.4;
# FreeBSD 8.1; OpenBSD 4.8; NetBSD 5.0; Mac OS X 10.6.3; SunOS 5.10; HP-UX 11i)
# written by magicant
# vim: set ft=sh ts=8 sts=8 sw=8 noet:

typeset gnu= bsd= freebsd= openbsd= netbsd= darwin= sunos= hpux=
case "$("$1" --version 2>/dev/null)" in
	*'coreutils'*)
		typeset gnu=true
		complete -C "$1" -X
		;;
	*)
		case $(uname) in
			FreeBSD) bsd=true   freebsd=true ;;
			OpenBSD) bsd=true   openbsd=true ;;
			NetBSD)  bsd=true   netbsd=true  ;;
			Darwin)  bsd=true   darwin=true  ;;
			*BSD)    bsd=true   ;;
			SunOS)   sunos=true ;;
			HP-UX)   hpux=true  ;;
		esac
		;;
esac

complete -C "$1" -f

if [ "$sunos$netbsd$freebsd$darwin$gnu" ]; then
	complete -C "$1" -O a ${gnu:+-O --all} \
		-D "print all file systems"
fi
if [ "$freebsd$darwin" ]; then
	complete -C "$1" -O b \
		-D "print figures in 512-byte units"
fi
if [ "$freebsd" ]; then
	complete -C "$1" -O c \
		-D "print the grand total"
fi
if [ "$hpux" ]; then
	complete -C "$1" -O f \
		-D "print the number of blocks in the free list"
fi
if [ "$netbsd$freebsd$darwin" ]; then
	complete -C "$1" -O g \
		-D "print figures in gigabytes (1073741824-byte units)"
fi
if [ "$netbsd" ]; then
	complete -C "$1" -O G \
		-D "print all the results of the statvfs function"
fi
if [ "$sunos$bsd$gnu" ]; then
	complete -C "$1" -O h ${gnu:+-O --human-readable} \
		-D "print size using K, M, etc. for 1024^n"
fi
if [ "$freebsd$darwin$gnu" ]; then
	complete -C "$1" -O H ${gnu:+-O --si} \
		-D "print size using k, M, etc. for 1000^n"
fi
if [ "$hpux$bsd$gnu" ]; then
	complete -C "$1" -O i ${gnu:+-O --inodes} \
		-D "print inode information"
fi
complete -C "$1" -O k \
	-D "print figures in kilobytes (1024-byte units)"
if [ "$sunos$hpux$bsd$gnu" ]; then
	complete -C "$1" -O l ${gnu:+-O --local} \
		-D "print info about local file systems only"
fi
if [ "$netbsd$freebsd$darwin$gnu" ]; then
	complete -C "$1" -O m \
		-D "print figures in megabytes (1048576-byte units)"
fi
if [ "$bsd" ]; then
	complete -C "$1" -O n \
		-D "allow printing cached data that may be out of date"
fi
complete -C "$1" -O P ${gnu:+-O --portability} \
	-D "print in the portable format defined by POSIX"
if [ "$hpux" ]; then
	complete -C "$1" -O s \
		-D "don't sync the file system data on the disk"
fi
if [ "$bsd$gnu" ] && ! [ "$darwin" ]; then
	# non-standard -t option
	complete -C "$1" -O t ${gnu:+-O --type} -F comp/ \
		-D "specify a file system type to print"
else
	# POSIX -t option
	complete -C "$1" -O t \
		-D "include total counts in the output"
fi
if [ "$freebsd$gnu" ]; then
	complete -C "$1" -O T ${gnu:+-O --print-type} \
		-D "print file system types"
elif [ "$darwin" ]; then
	complete -C "$1" -O T -F comp/ \
		-D "specify a file system type to print"
fi
if [ "$sunos" ]; then
	complete -C "$1" -O Z \
		-D "print file systems in all zones"
fi
if [ "$sunos$hpux" ]; then
	complete -C "$1" -O b \
		-D "print the size of free area in kilobytes"
	complete -C "$1" -O e \
		-D "print the number of files free"
	complete -C "$1" -O F -F comp/ \
		-D "specify a file system type to print"
	complete -C "$1" -O g \
		-D "print all the results of the statvfs function"
	complete -C "$1" -O n \
		-D "print file system types"
	complete -C "$1" -O o -F comp/ \
		-D "specify options specific to file systems"
	complete -C "$1" -O v \
		-D "print block counts"
	complete -C "$1" -O V \
		-D "print full command lines"
elif [ "$gnu" ]; then
	complete -C "$1" -O B -O --block-size -F comp/df/blocksize \
		-D "specify the block size unit to print figures in"
	complete -C "$1" -O --total \
		-D "print the grand total after the normal output"
	complete -C "$1" -O --no-sync \
		-D "allow printing cached data that may be out of date"
	complete -C "$1" -O --sync \
		-D "don't use cached data that may be out of date"
	complete -C "$1" -O x -O --exclude-type -F comp/ \
		-D "specify a file system type not to print"
	complete -C "$1" -O --help
	complete -C "$1" -O --version
	# this function is used for completion of the --block-size option's
	# argument. Not only df but also du and ls have this option.
	function comp/df/blocksize {
		typeset word="${@[-1]}"
		case "$word" in
			--b*=*) word=${word#--b*=} ;;
			--*)                       ;;
			-*B*)   word=${word#-*B}   ;;
		esac
		word=${word#\'}
		if [ "${word#[[:digit:]]}" = "$word" ]; then
			complete -W "$word"
			complete human-readable \
				-D "print size using K, M, etc. for 1024^n"
			complete si \
				-D "print size using k, M, etc. for 1000^n"
		else
			while [ "${word#[[:digit:]]}" != "$word" ]; do
				word=${word#[[:digit:]]}
			done
			complete -W "$word"
		fi
		complete K \
			-D "1024 bytes"
		complete KB \
			-D "1000 bytes"
		complete M \
			-D "1024^2 bytes"
		complete MB \
			-D "1000^2 bytes"
		complete G \
			-D "1024^3 bytes"
		complete GB \
			-D "1000^3 bytes"
		complete T \
			-D "1024^4 bytes"
		complete TB \
			-D "1000^4 bytes"
		complete P \
			-D "1024^5 bytes"
		complete PB \
			-D "1000^5 bytes"
		complete E \
			-D "1024^6 bytes"
		complete EB \
			-D "1000^6 bytes"
		complete Z \
			-D "1024^7 bytes"
		complete ZB \
			-D "1000^7 bytes"
		complete Y \
			-D "1024^8 bytes"
		complete YB \
			-D "1000^8 bytes"
	}
fi
