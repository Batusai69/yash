IFS=[ 	
]
IFS=[ 	
]
IFS set
1 2 3 - 1  2  3
ok
===== 1 =====
func1
func2
func2
re-defined.
re-defined func2
re-defined func1
===== 2 =====
123
1
22
3  3
4   4
5
456
99
8
8
8
7
4
6
i unset
ary0 unset
===== typeset export =====
abcdef
abcxyz
foo bar
unset global
export baz
export qux='global'
unset global
typeset -x baz
typeset -x qux='global'
unset
global
ary=('test' 'of' 'array')
export ary
ary=test:of:array
===== unset readonly =====
unset unset unset unset
readonly
func local
func readonly
func localagain
export
export
readonly ro2='export'
typeset -r ro='readonly'
typeset -r ro3='ro3'
1
2
3
ary=('test' 'of' 'array')
readonly ary
ary=('test' 'of' 'array')
typeset -xr ary
test of array
===== function typeset =====
func () { echo ok; }
echol () { typeset i; for i; do printf "%s\n" "${i}"; done; }
func () { echo ok; }
func1 () { echo re-defined func1; }
func2 () { echo re-defined func2; }
ok
===== array =====
aaa=('1' '2' '3' '4' '5' '6' '7' '8' '9')
ary=('test' 'of' 'array')
1 3 4 5 7 9
1 4 5 7
0 1 4 5 7
0 1 2 3 4 5 7
0 1 2 3 4 5 6 7
0 1 2 3 4 5 6 7 8
0 1 2 3 4 5 6 7 8 9
! 0 1 2 3 4 5 6 7 8 9
0 1 1 2 3 4 5 6 7 - 9
0 1 1 2 3 4 5 6 7 - 9
===== read =====
1 12
1 12\
=====
1 2 33 1 2
1 2 3 4 5
3
4
5
3
1 2 3
1
2
34
5
2
1
2
3

0
=====
1 2-3
4 5-6
7-8
9
4
1 2\
3
4 5\
6
7\
8
9\
7
2 3 4 3
6 7 8 3
0 1 2
